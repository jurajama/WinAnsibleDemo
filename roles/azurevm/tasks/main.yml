---
- name: Create resource group
  azure_rm_resourcegroup:
    name: "{{ az_rg_name }}"
    location: "{{ az_location }}"

- name: Create virtual network
  azure_rm_virtualnetwork:
    name: "{{ az_net_name }}"
    resource_group: "{{ az_rg_name }}"
    address_prefixes_cidr:
      - "{{ az_net_cidr }}"

- name: Create a subnet
  azure_rm_subnet:
    name: "{{ az_subnet_name }}"
    virtual_network_name: "{{ az_net_name }}"
    resource_group:       "{{ az_rg_name }}"
    address_prefix_cidr:  "{{ az_net_cidr }}"

- name: Create security group
  azure_rm_securitygroup:
    resource_group: "{{ az_rg_name }}"
    name:  "{{ az_sec_group }}"
    rules: "{{ az_sec_groups }}"

- name: Create a public ip address
  azure_rm_publicipaddress:
    resource_group: "{{ az_rg_name }}"
    name: "{{ az_pub_ip_name }}"
    domain_name: "{{ az_vm_dns_name |default(inventory_hostname) }}"
    allocation_method: Static

- name: Create network interface
  azure_rm_networkinterface:
    name:                   "{{ az_nic_name }}"
    resource_group:         "{{ az_rg_name }}"
    virtual_network_name:   "{{ az_net_name }}"
    subnet_name:            "{{ az_subnet_name }}"
    private_ip_address:     "{{ az_private_ip }}"
    public_ip_address_name: "{{ az_pub_ip_name }}"
    security_group_name:    "{{ az_sec_group }}"

- name: Create VM
  azure_rm_virtualmachine:
    resource_group:     "{{ az_rg_name }}"
    name:               "{{ az_vm_name |default(inventory_hostname) }}"
    vm_size:            "{{ az_vm_size }}"
    os_type:            "{{ az_vm_os_type |default('Linux') }}"
    managed_disk_type:  "{{ az_managed_disk_type }}"
    network_interfaces: "{{ az_nic_name }}"
    admin_username:     "{{ az_admin_username }}"
    admin_password:     "{{ az_admin_password |default(omit) }}"
    ssh_password_enabled: false
# The following parameter is only for Linux
#    ssh_public_keys:
#      - path: "/home/{{ az_admin_username }}/.ssh/authorized_keys"
#        key_data: "{{ az_ssh_public_key }}"
    image: "{{ az_vm_image }}"
  register: vmresult

- set_fact:
    vm_public_ip: "{{ vmresult.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}"

- debug:
    msg: "VM public IP: {{ vm_public_ip }}"

- name: Add VM to inventory
  add_host:
    hostname: "{{ az_vm_name }}"
    ansible_host: "{{ vm_public_ip }}"
    groupname: "{{ vm_ansible_group |default(omit) }}"

- name: Install WinRM
  block:
    - name: Install WinRM
      azure_rm_virtualmachine_extension:
        name: winrm-extension
        resource_group: "{{ az_rg_name }}"
        virtual_machine_name: "{{ az_vm_name }}"
        publisher: Microsoft.Compute
        virtual_machine_extension_type: CustomScriptExtension
        type_handler_version: 1.9
        settings: '{"commandToExecute": "powershell.exe -ExecutionPolicy ByPass -EncodedCommand {{ winrm_enable_script }}"}'
        auto_upgrade_minor_version: true

    - name: wait for the WinRM port to come online
      wait_for:
        port: 5986
        host: "{{ vm_public_ip }}"
        timeout: 600

  when: az_vm_os_type=="Windows"
